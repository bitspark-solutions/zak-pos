# =============================================================================
# POCKET POS - Apache Kafka Configuration
# =============================================================================
# Kafka broker configuration optimized for Docker container deployment
# Suitable for real-time messaging, event streaming, and microservices communication

# =============================================================================
# BROKER CONFIGURATION
# =============================================================================

# Unique broker ID for this Kafka instance
broker.id=1

# Listeners and advertised listeners
# PLAINTEXT for internal Docker communication
# EXTERNAL for external access (development)
listeners=PLAINTEXT://0.0.0.0:54629,EXTERNAL://0.0.0.0:56485
advertised.listeners=PLAINTEXT://kafka:54629,EXTERNAL://localhost:56485
listener.security.protocol.map=PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
inter.broker.listener.name=PLAINTEXT

# =============================================================================
# ZOOKEEPER CONFIGURATION
# =============================================================================

# Zookeeper connection string
zookeeper.connect=zookeeper:55374

# Zookeeper connection timeout
zookeeper.connection.timeout.ms=18000

# Zookeeper session timeout
zookeeper.session.timeout.ms=18000

# =============================================================================
# LOG CONFIGURATION
# =============================================================================

# Directory where Kafka stores log files
log.dirs=/kafka/kafka-logs

# Number of log partitions per topic (default)
num.partitions=3

# Default replication factor for automatically created topics
default.replication.factor=1

# Minimum in-sync replicas
min.insync.replicas=1

# =============================================================================
# LOG RETENTION CONFIGURATION
# =============================================================================

# Log retention hours (7 days)
log.retention.hours=168

# Log retention bytes (1GB per partition)
log.retention.bytes=1073741824

# Log segment size (1GB)
log.segment.bytes=1073741824

# Log retention check interval
log.retention.check.interval.ms=300000

# Log cleanup policy (delete or compact)
log.cleanup.policy=delete

# =============================================================================
# LOG COMPACTION CONFIGURATION
# =============================================================================

# Log cleaner enable
log.cleaner.enable=true

# Log cleaner threads
log.cleaner.threads=1

# Log cleaner IO buffer size
log.cleaner.io.buffer.size=524288

# Log cleaner dedupe buffer size
log.cleaner.dedupe.buffer.size=134217728

# =============================================================================
# NETWORK CONFIGURATION
# =============================================================================

# Number of network threads
num.network.threads=3

# Number of IO threads
num.io.threads=8

# Socket send buffer size
socket.send.buffer.bytes=102400

# Socket receive buffer size
socket.receive.buffer.bytes=102400

# Maximum socket request size
socket.request.max.bytes=104857600

# =============================================================================
# PRODUCER CONFIGURATION
# =============================================================================

# Producer batch size
batch.size=16384

# Producer linger time
linger.ms=5

# Producer buffer memory
buffer.memory=33554432

# Producer compression type
compression.type=snappy

# Producer acknowledgments
acks=1

# Producer retries
retries=2147483647

# Producer retry backoff
retry.backoff.ms=100

# =============================================================================
# CONSUMER CONFIGURATION
# =============================================================================

# Consumer group session timeout
group.initial.rebalance.delay.ms=3000

# Consumer fetch size
fetch.min.bytes=1

# Consumer fetch wait time
fetch.max.wait.ms=500

# Consumer max partition fetch bytes
max.partition.fetch.bytes=1048576

# =============================================================================
# TOPIC CONFIGURATION
# =============================================================================

# Auto create topics
auto.create.topics.enable=true

# Delete topic enable
delete.topic.enable=true

# Unclean leader election
unclean.leader.election.enable=false

# =============================================================================
# REPLICATION CONFIGURATION
# =============================================================================

# Replica fetch max bytes
replica.fetch.max.bytes=1048576

# Replica fetch wait max time
replica.fetch.wait.max.ms=500

# Replica high watermark checkpoint interval
replica.high.watermark.checkpoint.interval.ms=5000

# Replica socket timeout
replica.socket.timeout.ms=30000

# Replica socket receive buffer
replica.socket.receive.buffer.bytes=65536

# Replica lag time max
replica.lag.time.max.ms=30000

# =============================================================================
# CONTROLLER CONFIGURATION
# =============================================================================

# Controller socket timeout
controller.socket.timeout.ms=30000

# Controller message queue size
controller.message.queue.size=10

# =============================================================================
# OFFSET MANAGEMENT
# =============================================================================

# Offset metadata max bytes
offset.metadata.max.bytes=4096

# Offsets load buffer size
offsets.load.buffer.size=5242880

# Offsets topic replication factor
offsets.topic.replication.factor=1

# Offsets topic partitions
offsets.topic.num.partitions=50

# Offsets retention minutes (7 days)
offsets.retention.minutes=10080

# Offsets retention check interval
offsets.retention.check.interval.ms=600000

# Offsets commit timeout
offsets.commit.timeout.ms=5000

# =============================================================================
# TRANSACTION CONFIGURATION
# =============================================================================

# Transaction state log replication factor
transaction.state.log.replication.factor=1

# Transaction state log min ISR
transaction.state.log.min.isr=1

# Transaction state log partitions
transaction.state.log.num.partitions=50

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# Security protocol (PLAINTEXT for development)
security.protocol=PLAINTEXT

# SASL mechanism (disabled for development)
# sasl.mechanism.inter.broker.protocol=PLAIN
# sasl.enabled.mechanisms=PLAIN

# SSL configuration (disabled for development)
# ssl.keystore.location=/path/to/kafka.server.keystore.jks
# ssl.keystore.password=password
# ssl.key.password=password
# ssl.truststore.location=/path/to/kafka.server.truststore.jks
# ssl.truststore.password=password

# =============================================================================
# METRICS AND MONITORING
# =============================================================================

# Metrics reporters
metric.reporters=

# Metrics sample window
metrics.sample.window.ms=30000

# Metrics number of samples
metrics.num.samples=2

# Metrics recording level
metrics.recording.level=INFO

# =============================================================================
# JMX CONFIGURATION
# =============================================================================

# JMX port for monitoring
# jmx.port=9999

# =============================================================================
# QUOTA CONFIGURATION
# =============================================================================

# Producer quota bytes per second
# quota.producer.default=1048576

# Consumer quota bytes per second
# quota.consumer.default=2097152

# =============================================================================
# POCKET POS SPECIFIC TOPICS
# =============================================================================
# 
# Recommended topics for Pocket POS:
# - pos.transactions: Transaction events
# - pos.inventory: Inventory updates
# - pos.users: User activity events
# - pos.notifications: Real-time notifications
# - pos.analytics: Analytics events
# - pos.audit: Audit trail events
# - pos.payments: Payment processing events
# - pos.sync: Data synchronization events
# 
# =============================================================================

# =============================================================================
# PERFORMANCE TUNING
# =============================================================================

# Background threads
background.threads=10

# Request timeout
request.timeout.ms=30000

# Connections max idle
connections.max.idle.ms=600000

# Max request size
message.max.bytes=1000000

# Replica fetch response max bytes
replica.fetch.response.max.bytes=10485760

# =============================================================================
# LOG4J CONFIGURATION
# =============================================================================

# Kafka uses log4j for logging
# Log configuration is typically in log4j.properties file

# =============================================================================
# DEVELOPMENT VS PRODUCTION NOTES
# =============================================================================
#
# DEVELOPMENT:
# - Single broker setup
# - Lower retention periods
# - Auto-create topics enabled
# - No authentication/encryption
# - Smaller partition counts
#
# PRODUCTION:
# - Multi-broker cluster
# - Longer retention periods
# - Manual topic creation
# - Enable authentication and encryption
# - Higher partition counts for scalability
# - Monitor disk usage and network throughput
# - Configure proper replication factors
# - Set up monitoring with JMX
#
# =============================================================================

# =============================================================================
# CLUSTER CONFIGURATION (for production)
# =============================================================================
#
# For multi-broker setup:
# - Each broker should have unique broker.id
# - Configure proper advertised.listeners for each broker
# - Set replication factors > 1
# - Configure min.insync.replicas appropriately
# - Use rack awareness for better fault tolerance
#
# =============================================================================