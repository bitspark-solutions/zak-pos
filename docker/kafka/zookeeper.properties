# =============================================================================
# POCKET POS - Apache Zookeeper Configuration
# =============================================================================
# Zookeeper configuration for Kafka coordination and cluster management
# Optimized for Docker container deployment

# =============================================================================
# BASIC CONFIGURATION
# =============================================================================

# The number of milliseconds of each tick
tickTime=2000

# The number of ticks that the initial synchronization phase can take
initLimit=10

# The number of ticks that can pass between sending a request and getting an acknowledgement
syncLimit=5

# The directory where the snapshot is stored
dataDir=/zookeeper/data

# The directory where the transaction log is stored
dataLogDir=/zookeeper/logs

# The port at which the clients will connect
clientPort=55374

# =============================================================================
# NETWORK CONFIGURATION
# =============================================================================

# Maximum number of client connections
maxClientCnxns=60

# Minimum session timeout in milliseconds
minSessionTimeout=4000

# Maximum session timeout in milliseconds
maxSessionTimeout=40000

# =============================================================================
# PERFORMANCE TUNING
# =============================================================================

# Purge task interval in hours
autopurge.purgeInterval=1

# Number of snapshots to retain
autopurge.snapRetainCount=3

# Pre-allocate disk space for transaction log
preAllocSize=65536

# Commit log write threshold
snapCount=100000

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================

# Enable request logging
# zookeeper.log.threshold=INFO

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# Disable admin server for security (enable for monitoring)
admin.enableServer=false

# Admin server port (if enabled)
# admin.serverPort=8080

# =============================================================================
# CLUSTER CONFIGURATION
# =============================================================================
# 
# For multi-node Zookeeper ensemble (production):
# server.1=zoo1:2888:3888
# server.2=zoo2:2888:3888
# server.3=zoo3:2888:3888
# 
# Each server needs a myid file in dataDir with the server number
# 
# =============================================================================

# =============================================================================
# ADVANCED CONFIGURATION
# =============================================================================

# Enable Netty server (recommended)
serverCnxnFactory=org.apache.zookeeper.server.NettyServerCnxnFactory

# Netty server threads
zookeeper.nio.numSelectorThreads=2
zookeeper.nio.numWorkerThreads=8

# JVM heap size recommendations:
# Development: 512MB - 1GB
# Production: 2GB - 4GB

# =============================================================================
# MONITORING AND METRICS
# =============================================================================

# Enable JMX for monitoring
# com.sun.management.jmxremote=true
# com.sun.management.jmxremote.port=9998
# com.sun.management.jmxremote.authenticate=false
# com.sun.management.jmxremote.ssl=false

# =============================================================================
# FOUR LETTER WORDS CONFIGURATION
# =============================================================================

# Whitelist of 4lw commands (for monitoring)
4lw.commands.whitelist=stat,ruok,conf,isro,srvr,mntr

# =============================================================================
# DEVELOPMENT VS PRODUCTION NOTES
# =============================================================================
#
# DEVELOPMENT:
# - Single Zookeeper instance
# - Lower session timeouts
# - Frequent purging
# - Admin server disabled
# - Basic logging
#
# PRODUCTION:
# - Zookeeper ensemble (3 or 5 nodes)
# - Higher session timeouts
# - Optimized purging intervals
# - Enable monitoring (JMX, admin server)
# - Comprehensive logging
# - Consider SSL/SASL authentication
# - Monitor disk space and memory usage
# - Regular backups of data directory
#
# =============================================================================

# =============================================================================
# BACKUP AND RECOVERY
# =============================================================================
#
# Important directories to backup:
# - /zookeeper/data (snapshots)
# - /zookeeper/logs (transaction logs)
#
# Recovery process:
# 1. Stop Zookeeper
# 2. Restore data and log directories
# 3. Start Zookeeper
#
# =============================================================================

# =============================================================================
# TROUBLESHOOTING
# =============================================================================
#
# Common issues:
# 1. OutOfMemoryError: Increase JVM heap size
# 2. Connection timeouts: Check network connectivity
# 3. Disk space: Monitor and clean old snapshots/logs
# 4. High CPU: Check for too many client connections
#
# Useful commands:
# - echo ruok | nc localhost 55374 (health check)
# - echo stat | nc localhost 55374 (statistics)
# - echo conf | nc localhost 55374 (configuration)
# - echo mntr | nc localhost 55374 (monitoring data)
#
# =============================================================================