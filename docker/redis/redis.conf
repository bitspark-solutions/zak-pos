# =============================================================================
# POCKET POS - Redis Configuration
# =============================================================================
# Redis configuration optimized for Docker container deployment
# Suitable for caching, session management, and real-time features

# =============================================================================
# NETWORK CONFIGURATION
# =============================================================================

# Bind to all interfaces within the container
bind 0.0.0.0

# Port configuration
port 58392

# TCP listen backlog
tcp-backlog 511

# TCP keepalive
tcp-keepalive 300

# =============================================================================
# GENERAL CONFIGURATION
# =============================================================================

# Run as daemon (set to no for Docker)
daemonize no

# Process ID file
pidfile /var/run/redis_58392.pid

# Log level: debug, verbose, notice, warning
loglevel notice

# Log file (empty string for stdout)
logfile ""

# Syslog enabled
syslog-enabled no

# Syslog identity
syslog-ident redis

# Syslog facility
syslog-facility local0

# Number of databases
databases 16

# =============================================================================
# SNAPSHOTTING (PERSISTENCE)
# =============================================================================

# Save snapshots based on changes
# save <seconds> <changes>
save 900 1      # Save if at least 1 key changed in 900 seconds
save 300 10     # Save if at least 10 keys changed in 300 seconds
save 60 10000   # Save if at least 10000 keys changed in 60 seconds

# Stop writes on background save errors
stop-writes-on-bgsave-error yes

# Compress string objects using LZF
rdbcompression yes

# Checksum the RDB file
rdbchecksum yes

# RDB filename
dbfilename dump.rdb

# Working directory
dir /data

# =============================================================================
# REPLICATION
# =============================================================================

# Master authentication password
# masterauth <master-password>

# Slave serve stale data
slave-serve-stale-data yes

# Slave read only
slave-read-only yes

# Replication diskless sync
repl-diskless-sync no

# Replication diskless sync delay
repl-diskless-sync-delay 5

# Slave priority
slave-priority 100

# =============================================================================
# SECURITY
# =============================================================================

# Require password authentication
# requirepass your_redis_password_here

# Rename dangerous commands
rename-command FLUSHDB ""
rename-command FLUSHALL ""
rename-command KEYS ""
rename-command CONFIG "CONFIG_b835c3f8a5c2e3d7f1a9b4e6c8d2f5a1"
rename-command SHUTDOWN "SHUTDOWN_a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6"
rename-command DEBUG ""
rename-command EVAL ""

# =============================================================================
# LIMITS
# =============================================================================

# Max number of connected clients
maxclients 10000

# Max memory usage (adjust based on container memory)
maxmemory 512mb

# Memory policy when max memory is reached
# allkeys-lru: Remove any key according to LRU algorithm
# volatile-lru: Remove any key with expire set according to LRU
# allkeys-random: Remove any key randomly
# volatile-random: Remove any key with expire set randomly
# volatile-ttl: Remove any key with expire set and shorter TTL
# noeviction: Don't expire at all, just return an error on write operations
maxmemory-policy allkeys-lru

# LRU and minimal TTL algorithms sample size
maxmemory-samples 5

# =============================================================================
# APPEND ONLY FILE (AOF)
# =============================================================================

# Enable AOF persistence
appendonly yes

# AOF filename
appendfilename "appendonly.aof"

# AOF fsync policy
# always: fsync every write (slow, safest)
# everysec: fsync every second (compromise)
# no: never fsync, let OS decide (fast, least safe)
appendfsync everysec

# Don't fsync during rewrites
no-appendfsync-on-rewrite no

# Auto AOF rewrite percentage
auto-aof-rewrite-percentage 100

# Auto AOF rewrite min size
auto-aof-rewrite-min-size 64mb

# Load truncated AOF file
aof-load-truncated yes

# =============================================================================
# LUA SCRIPTING
# =============================================================================

# Lua script timeout in milliseconds
lua-time-limit 5000

# =============================================================================
# REDIS CLUSTER
# =============================================================================

# Enable cluster mode (disabled for single instance)
# cluster-enabled yes
# cluster-config-file nodes-58392.conf
# cluster-node-timeout 15000
# cluster-slave-validity-factor 10
# cluster-migration-barrier 1
# cluster-require-full-coverage yes

# =============================================================================
# SLOW LOG
# =============================================================================

# Slow log threshold in microseconds
slowlog-log-slower-than 10000

# Slow log max length
slowlog-max-len 128

# =============================================================================
# LATENCY MONITOR
# =============================================================================

# Latency monitoring threshold in milliseconds
latency-monitor-threshold 100

# =============================================================================
# EVENT NOTIFICATION
# =============================================================================

# Keyspace notifications
# K: Keyspace events
# E: Keyevent events
# g: Generic commands (DEL, EXPIRE, RENAME, ...)
# $: String commands
# l: List commands
# s: Set commands
# h: Hash commands
# z: Sorted set commands
# x: Expired events
# e: Evicted events
# A: Alias for g$lshzxe
notify-keyspace-events "Ex"

# =============================================================================
# ADVANCED CONFIG
# =============================================================================

# Hash max ziplist entries
hash-max-ziplist-entries 512

# Hash max ziplist value
hash-max-ziplist-value 64

# List max ziplist size
list-max-ziplist-size -2

# List compress depth
list-compress-depth 0

# Set max intset entries
set-max-intset-entries 512

# Sorted set max ziplist entries
zset-max-ziplist-entries 128

# Sorted set max ziplist value
zset-max-ziplist-value 64

# HyperLogLog sparse representation bytes limit
hll-sparse-max-bytes 3000

# Active rehashing
activerehashing yes

# Client output buffer limits
client-output-buffer-limit normal 0 0 0
client-output-buffer-limit slave 256mb 64mb 60
client-output-buffer-limit pubsub 32mb 8mb 60

# Client query buffer limit
client-query-buffer-limit 1gb

# Protocol max bulk length
proto-max-bulk-len 512mb

# Frequency of rehashing
hz 10

# Enable active defragmentation
# activedefrag yes
# active-defrag-ignore-bytes 100mb
# active-defrag-threshold-lower 10
# active-defrag-threshold-upper 100
# active-defrag-cycle-min 5
# active-defrag-cycle-max 75

# =============================================================================
# MODULES
# =============================================================================

# Load modules at startup
# loadmodule /path/to/module.so

# =============================================================================
# POCKET POS SPECIFIC CONFIGURATION
# =============================================================================

# Database allocation for different purposes:
# DB 0: Session storage
# DB 1: Application cache
# DB 2: Rate limiting
# DB 3: Real-time features (WebSocket connections)
# DB 4: Queue management
# DB 5: Analytics cache
# DB 6-15: Reserved for future use

# =============================================================================
# PERFORMANCE TUNING
# =============================================================================

# Disable protected mode for Docker (enable authentication instead)
protected-mode no

# TCP nodelay
tcp-nodelay yes

# Timeout for idle clients (0 = disabled)
timeout 0

# =============================================================================
# DEVELOPMENT VS PRODUCTION NOTES
# =============================================================================
#
# DEVELOPMENT:
# - Lower memory limits
# - More frequent saves for data safety
# - Detailed logging
# - Disabled authentication for easier development
#
# PRODUCTION:
# - Higher memory limits based on available RAM
# - Optimized save intervals
# - Enable authentication (requirepass)
# - Consider Redis Sentinel for high availability
# - Monitor slow queries and memory usage
# - Enable SSL/TLS if required
#
# =============================================================================

# =============================================================================
# MONITORING AND DEBUGGING
# =============================================================================

# Enable latency monitoring
latency-monitor-threshold 100

# Track memory usage
# Use MEMORY USAGE command to monitor key memory consumption
# Use INFO memory to get overall memory statistics

# =============================================================================
# BACKUP AND RECOVERY
# =============================================================================
#
# 1. RDB snapshots are saved to /data/dump.rdb
# 2. AOF logs are saved to /data/appendonly.aof
# 3. Mount /data volume for persistence
# 4. Regular backups should copy both files
# 5. For point-in-time recovery, use AOF
# 6. For faster startup, use RDB
#
# =============================================================================