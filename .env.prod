# =============================================================================
# POCKET POS - Production Environment Configuration
# =============================================================================
# Production environment settings - REPLACE ALL PLACEHOLDER VALUES
# NEVER commit this file with actual production secrets

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
POSTGRES_HOST=postgres
POSTGRES_PORT=47821
POSTGRES_DB=pocketpos_prod
POSTGRES_USER=pocketpos_prod
POSTGRES_PASSWORD=REPLACE_WITH_SECURE_PASSWORD
POSTGRES_ROOT_PASSWORD=REPLACE_WITH_SECURE_ROOT_PASSWORD

# Database URL for applications
DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}

# =============================================================================
# REDIS CONFIGURATION
# =============================================================================
REDIS_HOST=redis
REDIS_PORT=58392
REDIS_PASSWORD=REPLACE_WITH_SECURE_REDIS_PASSWORD
REDIS_URL=redis://:${REDIS_PASSWORD}@${REDIS_HOST}:${REDIS_PORT}

# =============================================================================
# KAFKA CONFIGURATION
# =============================================================================
KAFKA_HOST=kafka
KAFKA_PORT=56485
KAFKA_EXTERNAL_PORT=9093
ZOOKEEPER_HOST=zookeeper
ZOOKEEPER_PORT=55374

# Nginx Configuration
NGINX_HTTP_PORT=58071
NGINX_HTTPS_PORT=58443

# Kafka Topics
KAFKA_TOPIC_SALES=pos-sales-prod
KAFKA_TOPIC_INVENTORY=pos-inventory-prod
KAFKA_TOPIC_USERS=pos-users-prod
KAFKA_TOPIC_NOTIFICATIONS=pos-notifications-prod

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================

# Environment
NODE_ENV=production
ENVIRONMENT=production

# API Configuration
API_HOST=nestjs-api
API_PORT=39847
API_URL=https://api.yourdomain.com

# Web Client Configuration
WEB_HOST=nextjs-web
WEB_PORT=41923
WEB_URL=https://app.yourdomain.com

# Mobile App Configuration
MOBILE_HOST=react-native-mobile
MOBILE_PORT=52764
MOBILE_URL=https://mobile.yourdomain.com

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# JWT Configuration - GENERATE SECURE RANDOM KEYS
JWT_SECRET=REPLACE_WITH_SECURE_JWT_SECRET_MINIMUM_64_CHARACTERS
JWT_EXPIRES_IN=1h
JWT_REFRESH_SECRET=REPLACE_WITH_SECURE_JWT_REFRESH_SECRET_MINIMUM_64_CHARACTERS
JWT_REFRESH_EXPIRES_IN=7d

# Encryption - GENERATE SECURE RANDOM KEY
ENCRYPTION_KEY=REPLACE_WITH_SECURE_ENCRYPTION_KEY_32_CHARACTERS
HASH_SALT_ROUNDS=14

# CORS Configuration
CORS_ORIGIN=https://app.yourdomain.com,https://mobile.yourdomain.com
CORS_CREDENTIALS=true

# =============================================================================
# EXTERNAL SERVICES
# =============================================================================

# Email Configuration
SMTP_HOST=REPLACE_WITH_SMTP_HOST
SMTP_PORT=587
SMTP_USER=REPLACE_WITH_SMTP_USER
SMTP_PASSWORD=REPLACE_WITH_SMTP_PASSWORD
SMTP_FROM=noreply@yourdomain.com

# Payment Gateway
PAYMENT_GATEWAY_API_KEY=REPLACE_WITH_PAYMENT_API_KEY
PAYMENT_GATEWAY_SECRET=REPLACE_WITH_PAYMENT_SECRET

# File Storage
FILE_STORAGE_TYPE=s3
FILE_STORAGE_PATH=./uploads
AWS_ACCESS_KEY_ID=REPLACE_WITH_AWS_ACCESS_KEY
AWS_SECRET_ACCESS_KEY=REPLACE_WITH_AWS_SECRET_KEY
AWS_REGION=us-east-1
AWS_S3_BUCKET=REPLACE_WITH_S3_BUCKET_NAME

# =============================================================================
# MONITORING AND LOGGING
# =============================================================================

# Logging
LOG_LEVEL=warn
LOG_FORMAT=json
LOG_FILE_ENABLED=true
LOG_FILE_PATH=./logs

# Health Check
HEALTH_CHECK_TIMEOUT=3000
HEALTH_CHECK_INTERVAL=15000

# Metrics
METRICS_ENABLED=true
METRICS_PORT=9090

# =============================================================================
# DOCKER CONFIGURATION
# =============================================================================

# Docker Network
DOCKER_NETWORK=pocketpos-network
DOCKER_SUBNET=172.20.0.0/16

# Container Resource Limits (Production optimized)
POSTGRES_MEMORY_LIMIT=1g
POSTGRES_CPU_LIMIT=1
REDIS_MEMORY_LIMIT=512m
REDIS_CPU_LIMIT=0.5
KAFKA_MEMORY_LIMIT=2g
KAFKA_CPU_LIMIT=1
ZOOKEEPER_MEMORY_LIMIT=512m
ZOOKEEPER_CPU_LIMIT=0.5
API_MEMORY_LIMIT=1g
API_CPU_LIMIT=1
WEB_MEMORY_LIMIT=512m
WEB_CPU_LIMIT=0.5
MOBILE_MEMORY_LIMIT=512m
MOBILE_CPU_LIMIT=0.5

# Volume Paths
POSTGRES_DATA_PATH=/var/lib/postgresql/data
REDIS_DATA_PATH=/var/lib/redis/data
KAFKA_DATA_PATH=/var/lib/kafka/data
ZOOKEEPER_DATA_PATH=/var/lib/zookeeper/data
LOGS_PATH=/var/log/pocketpos
UPLOADS_PATH=/var/lib/pocketpos/uploads

# =============================================================================
# PRODUCTION SPECIFIC
# =============================================================================

# SSL/TLS
SSL_ENABLED=true
SSL_CERT_PATH=/etc/ssl/certs/cert.pem
SSL_KEY_PATH=/etc/ssl/private/key.pem
SSL_CA_PATH=/etc/ssl/certs/ca.pem

# Performance
CLUSTER_MODE=true
WORKER_PROCESSES=auto
MAX_CONNECTIONS=1000
KEEP_ALIVE_TIMEOUT=65

# Security
RATE_LIMIT_ENABLED=true
RATE_LIMIT_WINDOW=15
RATE_LIMIT_MAX_REQUESTS=100
SECURE_COOKIES=true
HTTPS_ONLY=true
CSRF_PROTECTION=true
HELMET_ENABLED=true

# Backup
BACKUP_ENABLED=true
BACKUP_SCHEDULE=0 2 * * *
BACKUP_RETENTION_DAYS=30
BACKUP_S3_BUCKET=REPLACE_WITH_BACKUP_BUCKET
BACKUP_ENCRYPTION_KEY=REPLACE_WITH_BACKUP_ENCRYPTION_KEY

# =============================================================================
# FEATURE FLAGS
# =============================================================================

# Features
FEATURE_ANALYTICS=true
FEATURE_NOTIFICATIONS=true
FEATURE_MULTI_STORE=true
FEATURE_LOYALTY_PROGRAM=true
FEATURE_INVENTORY_TRACKING=true
FEATURE_REPORTING=true

# =============================================================================
# COMPLIANCE
# =============================================================================

# GDPR
GDPR_ENABLED=true
DATA_RETENTION_DAYS=365
DATA_ANONYMIZATION_ENABLED=true

# PCI DSS
PCI_COMPLIANCE_MODE=true
CARD_DATA_ENCRYPTION=true
CARD_DATA_TOKENIZATION=true

# Audit
AUDIT_LOGGING=true
AUDIT_RETENTION_DAYS=2555  # 7 years
AUDIT_ENCRYPTION=true

# =============================================================================
# PRODUCTION PORTS (Internal only - no external exposure)
# =============================================================================
# Note: In production, only reverse proxy should be exposed externally
POSTGRES_EXTERNAL_PORT=  # Not exposed
REDIS_EXTERNAL_PORT=     # Not exposed
KAFKA_EXTERNAL_PORT=     # Not exposed
ZOOKEEPER_EXTERNAL_PORT= # Not exposed
API_EXTERNAL_PORT=       # Behind reverse proxy
WEB_EXTERNAL_PORT=       # Behind reverse proxy
MOBILE_EXTERNAL_PORT=    # Behind reverse proxy
METRICS_EXTERNAL_PORT=   # Internal monitoring only

# =============================================================================
# REVERSE PROXY CONFIGURATION
# =============================================================================
NGINX_HTTP_PORT=80
NGINX_HTTPS_PORT=443
NGINX_WORKER_PROCESSES=auto
NGINX_WORKER_CONNECTIONS=1024
NGINX_CLIENT_MAX_BODY_SIZE=10m
NGINX_PROXY_TIMEOUT=60s
NGINX_SSL_PROTOCOLS=TLSv1.2 TLSv1.3
NGINX_SSL_CIPHERS=ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256

# =============================================================================
# MONITORING AND ALERTING
# =============================================================================

# Prometheus
PROMETHEUS_ENABLED=true
PROMETHEUS_PORT=9090
PROMETHEUS_RETENTION=15d

# Grafana
GRAFANA_ENABLED=true
GRAFANA_PORT=53851
GRAFANA_ADMIN_USER=admin
GRAFANA_ADMIN_PASSWORD=REPLACE_WITH_SECURE_GRAFANA_PASSWORD

# Alerting
ALERT_MANAGER_ENABLED=true
ALERT_MANAGER_PORT=9093
SLACK_WEBHOOK_URL=REPLACE_WITH_SLACK_WEBHOOK
EMAIL_ALERTS_ENABLED=true
ALERT_EMAIL=alerts@yourdomain.com

# =============================================================================
# PRODUCTION DATABASE SETTINGS
# =============================================================================
DB_SEED_ENABLED=false
DB_MIGRATION_AUTO=false
DB_CONNECTION_POOL_MIN=5
DB_CONNECTION_POOL_MAX=20
DB_CONNECTION_TIMEOUT=30000
DB_QUERY_TIMEOUT=10000
DB_SSL_MODE=require

# =============================================================================
# PRODUCTION API SETTINGS
# =============================================================================
API_RATE_LIMIT_ENABLED=true
API_DOCUMENTATION_ENABLED=false
API_SWAGGER_PATH=  # Disabled in production
API_CORS_ENABLED=true
API_COMPRESSION_ENABLED=true
API_CACHE_TTL=300

# =============================================================================
# PRODUCTION SECURITY HEADERS
# =============================================================================
SECURITY_HSTS_ENABLED=true
SECURITY_HSTS_MAX_AGE=31536000
SECURITY_CSP_ENABLED=true
SECURITY_FRAME_OPTIONS=DENY
SECURITY_CONTENT_TYPE_OPTIONS=nosniff
SECURITY_XSS_PROTECTION=1; mode=block

# =============================================================================
# DISASTER RECOVERY
# =============================================================================
DR_ENABLED=true
DR_BACKUP_FREQUENCY=daily
DR_BACKUP_RETENTION=90
DR_REPLICATION_ENABLED=true
DR_FAILOVER_TIMEOUT=300

# =============================================================================
# PRODUCTION NOTES
# =============================================================================
# 1. REPLACE ALL 'REPLACE_WITH_*' VALUES WITH ACTUAL SECURE VALUES
# 2. Use a secrets management system (AWS Secrets Manager, HashiCorp Vault, etc.)
# 3. Enable SSL/TLS certificates from a trusted CA
# 4. Configure proper firewall rules and network security
# 5. Set up monitoring, alerting, and log aggregation
# 6. Implement proper backup and disaster recovery procedures
# 7. Regular security audits and penetration testing
# 8. Keep all dependencies and base images updated
# 9. Implement proper CI/CD with security scanning
# 10. Configure proper resource limits and auto-scaling